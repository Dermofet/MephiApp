version: "3.8"
name: "mephiapp"
services:
  db:
    container_name: db
    image: postgres:15.1
    restart: always
    volumes:
      - app-db-data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    restart: always
    depends_on:
      - db
    volumes:
      - ./backend/:/mephiapp-backend/backend/
      - ./config/:/mephiapp-backend/config/
      - ./logging_/:/mephiapp-backend/logging_/
    ports:
      - "8000:${BACKEND_PORT}"
    environment:
      DEBUG: ${DEBUG}
      BACKEND_TITLE: ${BACKEND_TITLE}
      BACKEND_DESCRIPTION: ${BACKEND_DESCRIPTION}
      BACKEND_PREFIX: ${BACKEND_PREFIX}
      BACKEND_HOST: ${BACKEND_HOST}
      BACKEND_PORT: ${BACKEND_PORT}
      BACKEND_RELOAD: ${BACKEND_RELOAD}
      BACKEND_LOCALHOST: ${BACKEND_LOCALHOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_SERVER: ${POSTGRES_SERVER}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      ENV: development

#  nginx:
#    container_name: nginx
#    image: nginx
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf
#    ports:
#      - "443:443"

  # celery:
  #   container_name: celery_worker
  #   build:
  #     context: .
  #     dockerfile: ./celery_worker/Dockerfile
  #   restart: always
  #   depends_on:
  #     - db
  #     - backend
  #   volumes:
  #     - ./celery_worker:/mephiapp-celery/celery_worker
  #     - ./config/:/mephiapp-celery/config
  #     - ./logging_/:/mephiapp-celery/logging_
  #     - ./etl/:/mephiapp-celery/etl
  #     - ./backend/:/mephiapp-celery/backend
  #   ports:
  #     - "7000:7000"
  #   environment:
  #     CELERY_NAME: ${CELERY_NAME}

  # rabbitmq:
  #   container_name: rabbitmq
  #   image: rabbitmq:3.12
  #   ports:
  #     - "5672:5672"
  #   environment:
  #     RABBITMQ_HOST: ${RABBITMQ_HOST}
  #     RABBITMQ_PORT: ${RABBITMQ_PORT}
  #     RABBITMQ_USER: ${RABBITMQ_USER}
  #     RABBITMQ_PASS: ${RABBITMQ_PASS}

  redis:
    container_name: redis
    image: redis:7.2-rc3
    ports:
      - "6379:6379"
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_USER: ${REDIS_USER}
      REDIS_PASS: ${REDIS_PASS}
      REDIS_DB: ${REDIS_DB}

volumes:
  app-db-data:
