version: "3.8"
name: "mephiapp"
services:
  db:
    container_name: db
    image: postgres:15.1
    restart: always
    volumes:
      - app-db-data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: --auth-local=scram-sha-256
    ports:
      - "${LOCAL_POSTGRES_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    restart: always
    depends_on:
      - db
    volumes:
      - ./backend/:/mephiapp-backend/backend/
      - ./config/:/mephiapp-backend/config/
      - ./logging_/:/mephiapp-backend/logging_/
      - ./etl/:/mephiapp-backend/etl/
    ports:
      - "8000:${BACKEND_PORT}"
    environment:
      DEBUG: ${DEBUG}
      BACKEND_TITLE: ${BACKEND_TITLE}
      BACKEND_DESCRIPTION: ${BACKEND_DESCRIPTION}
      BACKEND_PREFIX: ${BACKEND_PREFIX}
      BACKEND_HOST: ${BACKEND_HOST}
      BACKEND_PORT: ${BACKEND_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_SERVER: ${POSTGRES_SERVER}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      ENV: development

  #  nginx:
  #    container_name: nginx
  #    image: nginx
  #    volumes:
  #      - ./nginx.conf:/etc/nginx/nginx.conf
  #    ports:
  #      - "443:443"
  #    networks:
  #      - mephiapp-network

  celery:
    container_name: celery
    build:
      context: .
      dockerfile: ./celery_conf/Dockerfile
    restart: always
    depends_on:
      - db
      - backend
    volumes:
      - ./celery_conf:/mephiapp-celery/celery_conf
      - ./config/:/mephiapp-celery/config
      - ./logging_/:/mephiapp-celery/logging_
      - ./etl/:/mephiapp-celery/etl
      - ./backend/:/mephiapp-celery/backend
      - ./utils/:/mephiapp-celery/utils
    ports:
      - "9000:9000"
    environment:
      WORKER_CELERY_NAME: ${WORKER_CELERY_NAME}
      BEAT_CELERY_NAME: ${BEAT_CELERY_NAME}

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.12
    restart: always
    ports:
      - "5672:5672"
    environment:
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbit disk_free_limit 2147483648

  redis:
    container_name: redis
    image: bitnami/redis:6.2.13
    restart: always
    ports:
      - "${LOCAL_REDIS_PORT}:${REDIS_PORT}"
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DB: ${REDIS_DB}
      REDIS_PASSWORD: ${REDIS_PASSWORD}

volumes:
  app-db-data:
