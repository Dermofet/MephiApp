"""

Revision ID: f2c5b11ebba7
Revises: 
Create Date: 2023-08-29 14:35:44.055183

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f2c5b11ebba7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'academics',
        sa.Column("guid", sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("guid"),
        sa.UniqueConstraint("name")
    )
    op.create_table(
        'corps',
        sa.Column("guid", sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("name", sa.String(length=300), nullable=True),
        sa.PrimaryKeyConstraint("guid"),
        sa.UniqueConstraint("name")
    )
    op.create_table(
        'groups',
        sa.Column("guid", sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("name", sa.String(length=10), nullable=True),
        sa.Column("course", sa.Integer(), nullable=True),
        sa.Column("academic_guid", sa.dialects.postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(["academic_guid"], ["academics.guid"]),
        sa.PrimaryKeyConstraint("guid"),
        sa.UniqueConstraint("name")
    )
    op.create_table(
        'lessons',
        sa.Column("guid", sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("time_start", sa.Time(), nullable=True),
        sa.Column("time_end", sa.Time(), nullable=True),
        sa.Column("dot", sa.Boolean(), nullable=True),
        sa.Column("weeks", sa.Integer(), nullable=True),
        sa.Column("date_start", sa.Date(), nullable=True),
        sa.Column("date_end", sa.Date(), nullable=True),
        sa.Column("day", sa.String(length=50), nullable=True),
        sa.PrimaryKeyConstraint("guid")
    )
    op.create_table(
        'rooms',
        sa.Column("guid", sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("number", sa.String(length=300), nullable=True),
        sa.Column("corps_guid", sa.dialects.postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(["corps_guid"], ["corps.guid"]),
        sa.PrimaryKeyConstraint("guid"),
        sa.UniqueConstraint("number")
    )
    op.create_table(
        'lesson_translate',
        sa.Column("guid", sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("type", sa.String(length=50), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("subgroup", sa.String(length=200), nullable=True),
        sa.Column("lang", sa.String(length=2), nullable=True),
        sa.Column("lesson_guid", sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
        sa.ForeignKeyConstraint(["lesson_guid"], ["lessons.guid"]),
        sa.PrimaryKeyConstraint("guid")
    )
    op.create_table(
        'news',
        sa.Column("guid", sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("news_id", sa.String(length=50), nullable=True),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("preview_url", sa.String(), nullable=True),
        sa.Column("date", sa.Date(), nullable=True),
        sa.Column("text", sa.Text(), nullable=True),
        sa.Column("tag", sa.String(length=100), nullable=True),
        sa.PrimaryKeyConstraint("guid"),
        sa.UniqueConstraint("news_id")
    )
    op.create_table(
        'news_image',
        sa.Column("guid", sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("url", sa.String(), nullable=True),
        sa.Column("text", sa.Text(), nullable=True),
        sa.Column("news_guid", sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
        sa.ForeignKeyConstraint(["news_guid"], ["news.guid"]),
        sa.PrimaryKeyConstraint("guid")
    )
    op.create_table(
        'start_semester',
        sa.Column("guid", sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("date", sa.Date(), nullable=True),
        sa.PrimaryKeyConstraint("guid")
    )
    op.create_table(
        'teachers',
        sa.Column("guid", sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
        sa.PrimaryKeyConstraint("guid"),
        sa.Column("name", sa.String()),
        sa.Column("fullname", sa.String(), nullable=True),
        sa.Column("lang", sa.String()),
    )
    op.create_table(
        'AT_lesson_group',
        sa.Column("lesson_guid", sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("group_guid", sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
        sa.ForeignKeyConstraint(["lesson_guid"], ["lessons.guid"]),
        sa.ForeignKeyConstraint(["group_guid"], ["groups.guid"]),
        sa.PrimaryKeyConstraint("lesson_guid", "group_guid"),
        extend_existing=True
    )
    op.create_table(
        'AT_lesson_teacher',
        sa.Column("lesson_guid", sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("teacher_guid", sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
        sa.ForeignKeyConstraint(["lesson_guid"], ["lessons.guid"]),
        sa.ForeignKeyConstraint(["teacher_guid"], ["teachers.guid"]),
        sa.PrimaryKeyConstraint("lesson_guid", "teacher_guid"),
        extend_existing=True
    )
    op.create_table(
        'AT_lesson_room',
        sa.Column("lesson_guid", sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("room_guid", sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
        sa.ForeignKeyConstraint(["lesson_guid"], ["lessons.guid"]),
        sa.ForeignKeyConstraint(["room_guid"], ["rooms.guid"]),
        sa.PrimaryKeyConstraint("lesson_guid", "room_guid"),
        extend_existing=True
    )
    op.create_foreign_key(
        "fk_groups_academic_guid",
        "groups",
        "academics",
        ["academic_guid"],
        ["guid"],
        ondelete="CASCADE",
    )

    op.create_foreign_key(
        "fk_lessons_group_guid",
        "AT_lesson_group",
        "groups",
        ["group_guid"],
        ["guid"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "fk_lessons_lesson_guid",
        "AT_lesson_group",
        "lessons",
        ["lesson_guid"],
        ["guid"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "fk_lesson_translate_lesson_guid",
        "lesson_translate",
        "lessons",
        ["lesson_guid"],
        ["guid"],
        ondelete="CASCADE",
    )

    op.create_foreign_key(
        "fk_news_image_news_guid",
        "news_image",
        "news",
        ["news_guid"],
        ["guid"],
        ondelete="CASCADE",
    )

    op.create_foreign_key(
        "fk_rooms_corps_guid",
        "rooms",
        "corps",
        ["corps_guid"],
        ["guid"],
        ondelete="CASCADE",
    )

    op.create_foreign_key(
        "fk_lessons_room_guid",
        "AT_lesson_room",
        "rooms",
        ["room_guid"],
        ["guid"],
        ondelete="CASCADE",
    )

    op.create_foreign_key(
        "fk_lesson_teacher_lesson_guid",
        "AT_lesson_teacher",
        "lessons",
        ["lesson_guid"],
        ["guid"],
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rooms')
    op.drop_table('lessons')
    op.drop_table('groups')
    op.drop_table('corps')
    op.drop_table('AT_lesson_room')
    op.drop_table('AT_lesson_teacher')
    op.drop_table('AT_lesson_group')
    op.drop_table('academics')
    op.drop_table('teachers')
    op.drop_table('start_semester')
    op.drop_table('rooms')
    op.drop_table('news_image')
    op.drop_table('news')
    op.drop_table('lesson_translate')
    # ### end Alembic commands ###
